[core]
	whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol,space-before-tab

[merge]
	tool = vimdiff
	log = true

[branch]
	autosetuprebase = always

[push]
	default = current

[color]
	diff = yes
	ui = auto
	# ui = true
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow
	frag = magenta
	old = red
	new = green
	whitespace = red reverse
[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[alias]
	st = status
	ci = commit
	cp = cherry-pick
	br = branch
	co = checkout
	di = diff
	dc = diff --cached
	ds = diff --staged
	lg = log -p
	lod = log --graph --decorate --format='%h %ad %s' --date=short
	lol = log --graph --decorate --pretty=oneline --abbrev-commit
	lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
	hist = log --pretty=format:'%C(yellow)%h%C(reset) %ad | %C(75)%s%C(reset) %C(yellow)%d%C(reset) [%an]' --graph --date=short --branches --all
	rb = rebase
	ls = ls-files
	am = commit --amend
	amend = commit --amend -C HEAD
	undo = reset --soft HEAD^
	standup = log --since '1 day ago' --oneline --author <YOUREMAIL>
	# Show files ignored by git:
	ign = ls-files -o -i --exclude-standard

	# Search commits by message
	search = "!f() { git log --all --grep=$1; }; f"

	# Find merge commit. Usage: `git fm 0c23f92`.
	fm = "!sh -c 'git show `git rev-list --ancestry-path $0..dev --merges | tail -f`'"

[tag]
	sort = version:refname

[diff]
	noprefix = true

[url "git@github.com:"]
	pushInsteadOf = "gh:"
	pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
	insteadOf = "gh:"

[help]
	autocorrect = 1
