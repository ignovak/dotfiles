# set-option -g default-command "reattach-to-user-namespace -l zsh"
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"
set-option -g default-shell $SHELL

# Enable scroll, resize panes, select splits and windows by mouse
# set -g mode-mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on
if-shell "if [[ `tmux -V | cut -d' ' -f2` -lt 2.1 ]]; then true; else false; fi" \
    'set -g mode-mouse on; set -g mouse-resize-pane on; set -g mouse-select-pane on; set -g mouse-select-window on'
set-option -g mouse on

# Toggle mouse on with C-B m
bind m \
  set -g mode-mouse on \;\
  set -g mouse-resize-pane on \;\
  set -g mouse-select-pane on \;\
  set -g mouse-select-window on \;\
  display 'Mouse: ON'

# Toggle mouse off with C-B M for selecting normaly
bind M \
  set -g mode-mouse off \;\
  set -g mouse-resize-pane off \;\
  set -g mouse-select-pane off \;\
  set -g mouse-select-window off \;\
  display 'Mouse: OFF'

# Scroll History
set -g history-limit 10000

# Set first window index to 1 (not 0) for better switching from keyboard
set -g base-index 1
setw -g pane-base-index 1

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 50

# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Manage window size
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# Open new panes in current directory
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Copy and paste like in vim
# unbind [
# bind Escape copy-mode
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# bind-key -T edit-mode-vi Up send-keys -X history-up
# bind-key -T edit-mode-vi Down send-keys -X history-down
# unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
# unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection

# Reload tmux.conf on prexif+r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# If you really need to send PREFIX combination somewhere then use c-j
bind C-j send-prefix

# Colors
set -g status-fg white
set -g status-bg black

setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

setw -g window-status-current-fg white
setw -g window-status-current-bg green
setw -g window-status-current-attr bright

set -g message-fg white
set -g message-bg black
set -g message-attr bright

set -g status-justify centre

# React on window activity
setw -g monitor-activity on
set -g visual-activity on

# Make prefix + u maximize pane and prefix + i restore everything back, work shitty if you change window after
# pressing Down
unbind Up
unbind Down
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# Do not rename window titles automatically
set-window-option -g automatic-rename off
